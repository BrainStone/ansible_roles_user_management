---
# If this is empty, we won't add the ansible user
user_management_ansible_auth_key: ''

# A dictionary of all users. See README.md for how to use this
user_management_all_user_attrs: { }

# Whether to include the config files under /etc/ssh/sshd_config.d/*.conf
# Some sshd versions don't support that setting, so turn it off for those
user_management_sshd_include: true

# These two variables control which authentication types are allowed
user_management_sshd_password_authentication: true
user_management_sshd_permit_root_login: 'without-password'

# These two variables control which authentication types are allowed from local connection
user_management_sshd_local_password_authentication: true
user_management_sshd_local_permit_root_login: 'without-password'
# List of local subnets
# How it works
# - filters out interfaces `lo` and `dockerX`
# - gets the facts of all network interfaces (`ansible_facts[<interface>]`)
# - filters out inactive interfaces
# - generates the string `<network>/<netmask>` for every remaining network
# - turns that into CIDR notation
user_management_sshd_local_subnets: >
  {{
    ansible_facts | dict2items |
    selectattr('key', 'in',
      ansible_interfaces | reject('match', '^(lo|docker[0-9]+)$') | sort
    ) |
    selectattr('value.active', 'true') |
    json_query('[].value.ipv4.[network, netmask].join(`/`, @)') |
    map('ansible.utils.ipaddr', 'network/prefix')
  }}
