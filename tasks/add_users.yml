---
- name: Create Users
  ansible.builtin.user:
    name: "{{ item }}"
    shell: "{{ user_management_all_user_attrs[item].shell | default('/bin/bash') }}"
    state: "{{ user_management_all_user_attrs[item].state | default('present') }}"
    groups: "{{ (user_management_all_user_attrs[item].groups | default([])) + (user_management_all_user_attrs[item].admin | default(false) | ternary(['sudo'], [])) }}"
    password: "{{ user_management_all_user_attrs[item].password | default('!') }}"
    create_home: true
    home: "{{ (item == 'root') | ternary('/root', '/home/' + item) }}"
  with_items: "{{ user_management_authorized_users }}"
  when: user_management_all_user_attrs[item].state | default('present') != 'absent'
  tags: auth_accounts
  ignore_errors: "{{ ansible_check_mode }}"

- name: Authorized keys
  ansible.builtin.authorized_key:
    user: "{{ item }}"
    exclusive: yes
    state: "{{ user_management_all_user_attrs[item].state | default('present') }}"
    manage_dir: yes
    key: "{{ user_management_all_user_attrs[item].ssh_keys | join('\n') }}"
    path: "{{ (item == 'root') | ternary('/root', '/home/' + item) }}/.ssh/authorized_keys"
  with_items: "{{ user_management_authorized_users }}"
  when: user_management_all_user_attrs[item].ssh_keys is defined
  tags: auth_accounts
  ignore_errors: "{{ ansible_check_mode }}"

- name: Assert user directory permissions
  ansible.builtin.file:
    state: directory
    path: "~{{ item }}/.ssh"
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: 0700
  with_items: "{{ user_management_authorized_users }}"
  when: user_management_all_user_attrs[item].state | default('present') != 'absent'
  tags: auth_accounts
